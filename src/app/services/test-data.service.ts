import { Injectable } from '@angular/core';
import { Observable, of} from 'rxjs';
import { map } from 'rxjs/operators';
import { HttpClient  } from '@angular/common/http';
import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';
import { PageSpecification } from './page-specification.interface';

@Injectable({
    providedIn: 'root'
})


export class TestDataAccessService {
    private detailData;
    // public tableData;
    public _url = './assets/data/table-test-data.json';
    public _profileUrl = './assets/data/dataProfile.json';
//     public tableData = 
// [ { fullname: 'Jamshid Honari',
//     pushed: '02/19/2019',
//     status: 'Existing',
//     id: '814' },
//   { fullname: 'Steven Hockeiser',
//     pushed: '11/16/2018',
//     status: 'Existing',
//     id: '1001' },
//   { fullname: 'Randi Beck',
//     pushed: '11/07/2018',
//     status: 'Existing',
//     id: '1478' },
//   { fullname: 'Paul Vanderzee',
//     pushed: '01/25/2019',
//     status: 'Existing',
//     id: '2100' },
//   { fullname: 'David Miller',
//     pushed: '02/11/2019',
//     status: 'Existing',
//     id: '2317' },
//   { fullname: 'Jan Hajnosz',
//     pushed: '10/19/2018',
//     status: 'Existing',
//     id: '2549' },
//   { fullname: 'Jane Snatic',
//     pushed: '01/05/2019',
//     status: 'Updated',
//     id: '2572' },
//   { fullname: 'Wayne Sladek',
//     pushed: '12/27/2018',
//     status: 'Existing',
//     id: '2581' },
//   { fullname: 'Susan Kaufmann',
//     pushed: '10/04/2018',
//     status: 'Added',
//     id: '2790' },
//   { fullname: 'William Huff',
//     pushed: '12/25/2018',
//     status: 'Updated',
//     id: '3424' },
//   { fullname: 'Ilan Zawadzki',
//     pushed: '11/01/2018',
//     status: 'Existing',
//     id: '3425' },
//   { fullname: 'Howard Schafer',
//     pushed: '10/15/2018',
//     status: 'Removed',
//     id: '3426' },
//   { fullname: 'Jana Swett',
//     pushed: '10/25/2018',
//     status: 'Added',
//     id: '4976' },
//   { fullname: 'Gloria Arand',
//     pushed: '11/22/2018',
//     status: 'Existing',
//     id: '17270' },
//   { fullname: 'Edward Reisman',
//     pushed: '12/08/2018',
//     status: 'Updated',
//     id: '18352' },
//   { fullname: 'Robert Riggs',
//     pushed: '02/08/2019',
//     status: 'Existing',
//     id: '18353' },
//   { fullname: 'Timothy Ritchey',
//     pushed: '02/12/2019',
//     status: 'Added',
//     id: '18355' },
//   { fullname: 'William Sayres',
//     pushed: '02/24/2019',
//     status: 'Existing',
//     id: '18359' },
//   { fullname: 'Michael Sikora',
//     pushed: '11/17/2018',
//     status: 'Existing',
//     id: '18367' },
//   { fullname: 'Jeffrey White',
//     pushed: '12/14/2018',
//     status: 'Removed',
//     id: '18381' },
//   { fullname: 'Philip Dooley',
//     pushed: '01/28/2019',
//     status: 'Removed',
//     id: '19205' },
//   { fullname: 'Michelle Manaois',
//     pushed: '11/05/2018',
//     status: 'Updated',
//     id: '21544' },
//   { fullname: 'Shannon DeVange',
//     pushed: '01/14/2019',
//     status: 'Existing',
//     id: '24808' },
//   { fullname: 'Allan Nichols',
//     pushed: '11/03/2018',
//     status: 'Added',
//     id: '30233' },
//   { fullname: 'Daniel Johnson',
//     pushed: '01/20/2019',
//     status: 'Existing',
//     id: '30477' },
//   { fullname: 'Jason Kettler',
//     pushed: '11/12/2018',
//     status: 'Existing',
//     id: '30496' },
//   { fullname: 'Eric Seaver',
//     pushed: '01/31/2019',
//     status: 'Updated',
//     id: '30498' },
//   { fullname: 'Megan Melo',
//     pushed: '12/28/2018',
//     status: 'Existing',
//     id: '31575' },
//   { fullname: 'Helen Shaha',
//     pushed: '03/07/2019',
//     status: 'Existing',
//     id: '31578' },
//   { fullname: 'Daniel Salyer',
//     pushed: '11/12/2018',
//     status: 'Updated',
//     id: '31582' },
//   { fullname: 'Rebecca Von Duering',
//     pushed: '12/18/2018',
//     status: 'Updated',
//     id: '34831' },
//   { fullname: 'Lance Ho',
//     pushed: '12/22/2018',
//     status: 'Added',
//     id: '39053' },
//   { fullname: 'Virginia Su',
//     pushed: '03/13/2019',
//     status: 'Existing',
//     id: '39274' },
//   { fullname: 'Brad MacKinnon',
//     pushed: '11/08/2018',
//     status: 'Existing',
//     id: '40059' },
//   { fullname: 'Isaac Bohannon',
//     pushed: '10/15/2018',
//     status: 'Existing',
//     id: '41112' },
//   { fullname: 'Colette Spencer',
//     pushed: '12/15/2018',
//     status: 'Existing',
//     id: '42009' },
//   { fullname: 'Mark La Shell',
//     pushed: '02/15/2019',
//     status: 'Existing',
//     id: '42454' },
//   { fullname: 'Ashley Gray',
//     pushed: '10/16/2018',
//     status: 'Removed',
//     id: '44881' },
//   { fullname: 'Christy Sutton',
//     pushed: '10/18/2018',
//     status: 'Existing',
//     id: '45978' },
//   { fullname: 'Jenny Wu',
//     pushed: '10/22/2018',
//     status: 'Added',
//     id: '46808' },
//   { fullname: 'Ashok Shimoji-krishnan',
//     pushed: '03/06/2019',
//     status: 'Existing',
//     id: '47916' },
//   { fullname: 'Hanh Nguyen',
//     pushed: '02/09/2019',
//     status: 'Existing',
//     id: '47922' },
//   { fullname: 'Edelveis Clapp',
//     pushed: '11/17/2018',
//     status: 'Existing',
//     id: '49098' },
//   { fullname: 'Richard Granger',
//     pushed: '02/25/2019',
//     status: 'Existing',
//     id: '53148' },
//   { fullname: 'Christine Topinka',
//     pushed: '12/07/2018',
//     status: 'Updated',
//     id: '54001' },
//   { fullname: 'Sarah Crow',
//     pushed: '10/23/2018',
//     status: 'Existing',
//     id: '55328' },
//   { fullname: 'Meride Hostetler',
//     pushed: '03/12/2019',
//     status: 'Existing',
//     id: '56442' },
//   { fullname: 'Carrie Sieber',
//     pushed: '11/28/2018',
//     status: 'Added',
//     id: '57500' },
//   { fullname: 'Aspen Copeland',
//     pushed: '01/05/2019',
//     status: 'Existing',
//     id: '57769' },
//   { fullname: 'Owen Kendall',
//     pushed: '02/19/2019',
//     status: 'Updated',
//     id: '59702' },
//   { fullname: 'Molly Garbus',
//     pushed: '03/13/2019',
//     status: 'Updated',
//     id: '59704' },
//   { fullname: 'Brent Hammack',
//     pushed: '11/22/2018',
//     status: 'Existing',
//     id: '59927' },
//   { fullname: 'Ashlee Worrasangasilpa',
//     pushed: '01/25/2019',
//     status: 'Updated',
//     id: '60923' },
//   { fullname: 'Ashley Murphy',
//     pushed: '03/11/2019',
//     status: 'Updated',
//     id: '65364' },
//   { fullname: 'Aren Giske',
//     pushed: '03/21/2019',
//     status: 'Updated',
//     id: '65370' },
//   { fullname: 'Holly Holbrooks-Kuratek',
//     pushed: '01/20/2019',
//     status: 'Updated',
//     id: '65373' },
//   { fullname: 'Laura Turgano',
//     pushed: '02/21/2019',
//     status: 'Existing',
//     id: '65377' },
//   { fullname: 'Avantika Waring',
//     pushed: '03/01/2019',
//     status: 'Updated',
//     id: '65378' },
//   { fullname: 'Douglas Christie',
//     pushed: '03/02/2019',
//     status: 'Updated',
//     id: '65380' },
//   { fullname: 'Azadeh Farokhi',
//     pushed: '02/27/2019',
//     status: 'Existing',
//     id: '65382' },
//   { fullname: 'Emily Battisti',
//     pushed: '10/01/2018',
//     status: 'Updated',
//     id: '65383' },
//   { fullname: 'Matthew Currier',
//     pushed: '02/03/2019',
//     status: 'Added',
//     id: '66001' },
//   { fullname: 'Reena Grewal',
//     pushed: '01/06/2019',
//     status: 'Existing',
//     id: '66003' },
//   { fullname: 'Lisa Vogel',
//     pushed: '12/11/2018',
//     status: 'Updated',
//     id: '66009' },
//   { fullname: 'Blythe Darnton',
//     pushed: '11/30/2018',
//     status: 'Updated',
//     id: '66695' },
//   { fullname: 'Alison Merritt',
//     pushed: '10/02/2018',
//     status: 'Removed',
//     id: '66697' },
//   { fullname: 'Laura Joreteg',
//     pushed: '01/28/2019',
//     status: 'Removed',
//     id: '67345' },
//   { fullname: 'Anne-Marie Wood',
//     pushed: '03/05/2019',
//     status: 'Existing',
//     id: '67546' },
//   { fullname: 'Brian Rougeux',
//     pushed: '11/09/2018',
//     status: 'Added',
//     id: '71810' },
//   { fullname: 'Adam Killpack',
//     pushed: '11/22/2018',
//     status: 'Existing',
//     id: '71814' },
//   { fullname: 'Joshua Urness',
//     pushed: '10/14/2018',
//     status: 'Existing',
//     id: '76010' },
//   { fullname: 'Sarah Avery-leaf',
//     pushed: '03/06/2019',
//     status: 'Added',
//     id: '76011' },
//   { fullname: 'Haley Anderson',
//     pushed: '02/04/2019',
//     status: 'Existing',
//     id: '76012' },
//   { fullname: 'Cristina Kim',
//     pushed: '11/20/2018',
//     status: 'Updated',
//     id: '76018' },
//   { fullname: 'Rebekah Foelker',
//     pushed: '01/19/2019',
//     status: 'Removed',
//     id: '76276' },
//   { fullname: 'Saraga Reddy',
//     pushed: '02/18/2019',
//     status: 'Existing',
//     id: '77344' },
//   { fullname: 'Kim Concannon',
//     pushed: '12/04/2018',
//     status: 'Updated',
//     id: '77346' },
//   { fullname: 'Gerald  Gibbons',
//     pushed: '02/17/2019',
//     status: 'Updated',
//     id: '77351' },
//   { fullname: 'Stephen Supoyo',
//     pushed: '10/02/2018',
//     status: 'Updated',
//     id: '77353' },
//   { fullname: 'Sarah Ching',
//     pushed: '11/30/2018',
//     status: 'Added',
//     id: '79310' },
//   { fullname: 'Tiffany Hseih',
//     pushed: '03/02/2019',
//     status: 'Existing',
//     id: '79312' },
//   { fullname: 'Tracy Sherertz',
//     pushed: '01/28/2019',
//     status: 'Existing',
//     id: '79551' },
//   { fullname: 'Adriana Marti',
//     pushed: '11/12/2018',
//     status: 'Updated',
//     id: '80304' },
//   { fullname: 'Alix Williams',
//     pushed: '10/11/2018',
//     status: 'Removed',
//     id: '80503' },
//   { fullname: 'Leighe Grotenhuis',
//     pushed: '12/06/2018',
//     status: 'Removed',
//     id: '80506' },
//   { fullname: 'Robert Carson',
//     pushed: '01/23/2019',
//     status: 'Removed',
//     id: '80508' },
//   { fullname: 'Renatta Craven',
//     pushed: '11/27/2018',
//     status: 'Updated',
//     id: '80512' },
//   { fullname: 'Jillian Hansen',
//     pushed: '12/24/2018',
//     status: 'Existing',
//     id: '80513' },
//   { fullname: 'Jessica Donovan',
//     pushed: '02/14/2019',
//     status: 'Updated',
//     id: '80514' },
//   { fullname: 'Tolani Ogunyoku',
//     pushed: '12/08/2018',
//     status: 'Existing',
//     id: '80517' },
//   { fullname: 'Adriana Piazza',
//     pushed: '12/13/2018',
//     status: 'Added',
//     id: '80518' },
//   { fullname: 'Megan Vock',
//     pushed: '12/19/2018',
//     status: 'Existing',
//     id: '80519' },
//   { fullname: 'John Roberts',
//     pushed: '03/21/2019',
//     status: 'Existing',
//     id: '80520' },
//   { fullname: 'Phillip Woodard',
//     pushed: '12/16/2018',
//     status: 'Updated',
//     id: '81611' },
//   { fullname: 'Lauren  Donahue',
//     pushed: '11/12/2018',
//     status: 'Existing',
//     id: '82962' } ];
          
    constructor(private http: HttpClient) {
        this.detailData = {
            '814': {
                id: '814',
                description: 'Detail of data 1'
            },
            '2': {
                id: '2',
                description: 'Detail of data 2'
            },
            '3': {
                id: '3',
                description: 'Detail of data 3'
            },
            '4': {
                id: '4',
                description: 'Detail of data 4'
            },
            '5': {
                id: '5',
                description: 'Detail of data 5'
            },
            '6': {
                id: '6',
                description: 'Detail of data 6'
            }
        };
    }
    private modalData: BehaviorSubject<any> = new BehaviorSubject<any>(null);
    public setData(data: any) {
        this.modalData = data;
    }

    public getModalData(): Observable<any> {
        return this.modalData.asObservable();
    }

    public getModalD() {
        return this.modalData;
    }

    public getTableData(): Observable<any> {
        return this.http.get('./assets/data/table-test-data.json');
    }

    public getProfile(): Observable<any> {
        return this.http.get(this._profileUrl);
    }


    public getDetailData(id: string): Observable<any> {
        return of<any>(this.detailData[id]);
    }

    public getPageData(pageSpec: PageSpecification): Observable<any> {
        return this.http.get(this._url)
            .pipe(
                map(result => {
                    return {
                        totalResults: (<any[]>result['items']).length,
                        results: (<any[]>result['items']).slice(pageSpec.start, pageSpec.end)
                    };
                })
            );
    }
}
